#!/usr/bin/env python3

# Message queue RPC version based on RabbitMQ and pika.

import json
import sentry_sdk
from pprint import pprint

from heppy.Args import Args
from heppy.Error import Error
from heppy.Client import Client
from heppy.Config import Config
from heppy.Request import Request
from heppy.Response import Response
from heppy.RabbitMQ import RPCClient
from heppy.Net import remove_bom

args = Args()
config = Config(args.get('path'))

if config.get('sentry_dsn', None) is not None:
    sentry_sdk.init(
        dsn=config.get('sentry_dsn'),
        enable_tracing=True,
    )

is_json = args.pop('json', False)
if is_json:
    query = json.dumps(args)
    print(query)
else:
    request = Request.build(args)
    query = remove_bom(request.decode('utf-8') if isinstance(request, bytes) else str(request))
    print(Request.prettifyxml(query))

rabbit_config = config.get('RabbitMQ', {})
rabbit_config.setdefault('queue', 'heppy-' + config['name'])
client = RPCClient(rabbit_config)
reply = client.request(query)

if is_json:
    pprint(json.loads(reply))
else:
    response = Response.parsexml(reply)
    print(response)
    pprint(response.data)

