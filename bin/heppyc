#!/usr/bin/env python

# Message queue RPC version based on RabbitMQ and pika.

import json
import sentry_sdk

from pprint import pprint

from heppy.Args import Args
from heppy.Error import Error
from heppy.Client import Client
from heppy.Config import Config
from heppy.Request import Request
from heppy.Response import Response
from heppy.RabbitMQ import RPCClient

args = Args()
config = Config(args.get('path'))

if (config.get('sentry_dsn', None) is not None):
    sentry_sdk.init(
        dsn=config.get('sentry_dsn'),
        enable_tracing=True,
    )

is_json = args.pop('json', False)
if is_json:
    query = json.dumps(args)
    print query
else:
    request = Request.build(args)
    query = str(request)
    print Request.prettifyxml(query)

rabbit_config = config.get('RabbitMQ', {})
rabbit_config.setdefault('queue', 'heppy-' + config['name'])
pprint(rabbit_config)
client = RPCClient(rabbit_config)

reply = client.request(query)
print reply
if is_json:
    pprint(json.loads(reply))
else:
    print Request.prettifyxml(reply)
    response = Response.parsexml(reply)
    pprint(response.data)

